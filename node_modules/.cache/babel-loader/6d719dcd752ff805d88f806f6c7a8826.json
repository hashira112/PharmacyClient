{"ast":null,"code":"const options = {\n  legend: {\n    labels: {\n      // This more specific font property overrides the global property\n      fontFamily: 'Poppins',\n      fontSize: 0\n    },\n    display: false\n  },\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [{\n      gridLines: {\n        color: 'rgba(0, 100, 0, 0.0)',\n        drawBorder: true,\n        zeroLineColor: 'rgba(0, 100, 0, 0.1)'\n      },\n      ticks: {\n        display: true,\n        beginAtZero: true,\n        fontFamily: 'Poppins',\n        fontColor: '#3a3a3a'\n      }\n    }],\n    xAxes: [{\n      gridLines: {\n        color: 'rgba(0, 100, 0, 0.0)',\n        zeroLineColor: 'rgba(0, 100, 0, 0.1)'\n      },\n      ticks: {\n        display: true,\n        beginAtZero: true,\n        fontFamily: 'Poppins',\n        fontColor: '#3a3a3a'\n      }\n    }]\n  }\n};\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nlet date = new Date();\n\nconst alternative = month => {\n  return date.getMonth() - month < 0 ? date.getMonth() - month + 12 : date.getMonth() - month;\n};\n\nlet month = date.getMonth() + 1;\nlet day = date.getDate();\nif (day < 10) day = '0' + day;\nlet year = date.getFullYear();\nlet shortStartDate = day + \"/\" + month + \"/\" + year;\nexport default {\n  options,\n  months,\n  alternative,\n  date: shortStartDate\n};","map":{"version":3,"sources":["C:/Users/karth/Desktop/pharm/Pharmacy/src/util/main.js"],"names":["options","legend","labels","fontFamily","fontSize","display","maintainAspectRatio","scales","yAxes","gridLines","color","drawBorder","zeroLineColor","ticks","beginAtZero","fontColor","xAxes","months","date","Date","alternative","month","getMonth","day","getDate","year","getFullYear","shortStartDate"],"mappings":"AAAA,MAAMA,OAAO,GAAG;AAACC,EAAAA,MAAM,EAAE;AAACC,IAAAA,MAAM,EAAE;AAAG;AACjCC,MAAAA,UAAU,EAAC,SADmB;AAE9BC,MAAAA,QAAQ,EAAE;AAFoB,KAAT;AAGnBC,IAAAA,OAAO,EAAC;AAHW,GAAT;AAKhBC,EAAAA,mBAAmB,EAAC,KALJ;AAMhBC,EAAAA,MAAM,EAAE;AAAEC,IAAAA,KAAK,EAAE,CAAC;AAAEC,MAAAA,SAAS,EAAC;AAC9BC,QAAAA,KAAK,EAAC,sBADwB;AAE9BC,QAAAA,UAAU,EAAC,IAFmB;AAG9BC,QAAAA,aAAa,EAAC;AAHgB,OAAZ;AAIlBC,MAAAA,KAAK,EAAE;AAAER,QAAAA,OAAO,EAAC,IAAV;AACPS,QAAAA,WAAW,EAAE,IADN;AAEPX,QAAAA,UAAU,EAAC,SAFJ;AAGPY,QAAAA,SAAS,EAAC;AAHH;AAJW,KAAD,CAAT;AAQRC,IAAAA,KAAK,EAAC,CAAC;AAACP,MAAAA,SAAS,EAAC;AAClBC,QAAAA,KAAK,EAAC,sBADY;AAElBE,QAAAA,aAAa,EAAC;AAFI,OAAX;AAGPC,MAAAA,KAAK,EAAE;AAACR,QAAAA,OAAO,EAAC,IAAT;AACPS,QAAAA,WAAW,EAAE,IADN;AAEPX,QAAAA,UAAU,EAAC,SAFJ;AAGPY,QAAAA,SAAS,EAAC;AAHH;AAHA,KAAD;AARE;AANQ,CAAhB;AAuBA,MAAME,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf;AACA,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;;AACA,MAAMC,WAAW,GAAGC,KAAK,IAAG;AACxB,SAAOH,IAAI,CAACI,QAAL,KAAgBD,KAAhB,GAAwB,CAAxB,GAA0BH,IAAI,CAACI,QAAL,KAAgBD,KAAhB,GAAwB,EAAlD,GAAuDH,IAAI,CAACI,QAAL,KAAgBD,KAA9E;AACH,CAFD;;AAIA,IAAIA,KAAK,GAAGH,IAAI,CAACI,QAAL,KAAgB,CAA5B;AACA,IAAIC,GAAG,GAAGL,IAAI,CAACM,OAAL,EAAV;AACA,IAAGD,GAAG,GAAC,EAAP,EAAUA,GAAG,GAAG,MAAMA,GAAZ;AACV,IAAIE,IAAI,GAAGP,IAAI,CAACQ,WAAL,EAAX;AACA,IAAIC,cAAc,GAAGJ,GAAG,GAAG,GAAN,GAAYF,KAAZ,GAAoB,GAApB,GAA0BI,IAA/C;AAEA,eAAe;AAACzB,EAAAA,OAAD;AAASiB,EAAAA,MAAT;AAAiBG,EAAAA,WAAjB;AAA8BF,EAAAA,IAAI,EAAES;AAApC,CAAf","sourcesContent":["const options = {legend: {labels: {  // This more specific font property overrides the global property\r\n    fontFamily:'Poppins',\r\n    fontSize: 0,\r\n    },display:false,\r\n  },\r\nmaintainAspectRatio:false,\r\nscales: { yAxes: [{ gridLines:{\r\ncolor:'rgba(0, 100, 0, 0.0)',\r\ndrawBorder:true,\r\nzeroLineColor:'rgba(0, 100, 0, 0.1)'},\r\nticks: { display:true,\r\nbeginAtZero: true,\r\nfontFamily:'Poppins',\r\nfontColor:'#3a3a3a'},},],\r\nxAxes:[{gridLines:{\r\ncolor:'rgba(0, 100, 0, 0.0)',\r\nzeroLineColor:'rgba(0, 100, 0, 0.1)'},\r\nticks: {display:true,\r\nbeginAtZero: true,\r\nfontFamily:'Poppins',\r\nfontColor:'#3a3a3a'},\r\n},]},}\r\n\r\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\r\nlet date = new Date()\r\nconst alternative = month =>{\r\n    return date.getMonth()-month < 0?date.getMonth()-month + 12 : date.getMonth()-month\r\n}\r\n\r\nlet month = date.getMonth()+1\r\nlet day = date.getDate()\r\nif(day<10)day = '0' + day\r\nlet year = date.getFullYear()\r\nlet shortStartDate = day + \"/\" + month + \"/\" + year \r\n\r\nexport default {options,months, alternative, date: shortStartDate}  "]},"metadata":{},"sourceType":"module"}