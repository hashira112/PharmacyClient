{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\pharm\\\\Pharmacy\\\\src\\\\pages\\\\invoice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport util from '../util/main';\nimport axios from 'axios';\nexport default function Invoice() {\n  _s();\n\n  const [prod, setProd] = useState({\n    status: false,\n    data: null\n  });\n  const [id, setId] = useState(null);\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/sales').then(res => {\n      let arr = Object.values(res.data);\n      setId(arr[arr.length - 1].id + 1);\n    });\n    axios.get('http://localhost:8080/api/products').then(res => setProd({\n      status: true,\n      data: Object.values(res.data)\n    }));\n  }, []);\n  const [sudo, setSudo] = useState({\n    name: \"\",\n    age: \"\"\n  }); //clears value\n\n  let shortStartDate = util.date;\n  const [data, setData] = useState({\n    name: '',\n    amount: '',\n    date: shortStartDate,\n    products: null\n  });\n\n  const changeHandler = e => {\n    const keyName = e.target.name;\n    const value = e.target.value;\n    setData({\n      name: data.name,\n      amount: data.amount,\n      date: data.date,\n      products: data.products,\n      [keyName]: value\n    });\n    setSudo({\n      name: sudo.name,\n      age: sudo.age,\n      [keyName]: value\n    });\n  };\n\n  const salesAdd = e => {\n    e.preventDefault();\n\n    if (data.name !== '' && list.total !== 0) {\n      console.log(data);\n      axios.post('https://localhost:4040/api/sales', {\n        \"name\": data.name,\n        \"amount\": list.total,\n        \"date\": data.date,\n        \"products\": data.products\n      }).then(res => {\n        if (res.status === 200) {\n          alert('Data Added');\n          console.log(res);\n          setList({ ...list,\n            data: [],\n            total: 0\n          });\n          setSudo({\n            name: \"\",\n            age: \"\"\n          });\n          setId(id + 1);\n        }\n      });\n    } else alert('please fill the required fields!');\n  };\n\n  const [filter, setFilter] = useState([]);\n  const [active, setActive] = useState(null);\n  const [list, setList] = useState({\n    data: [],\n    quan: null,\n    price: null,\n    name: null,\n    total: 0\n  });\n\n  const addList = () => {\n    const preList = list.data;\n    preList.push({\n      name: list.name,\n      quan: list.quan,\n      price: list.price\n    });\n    let total = 0;\n    list.data.map(item => total = total + item.quan * item.price);\n    setList({\n      data: preList,\n      price: null,\n      quan: \"\",\n      total: total,\n      name: null,\n      price: 0\n    });\n    setActive(\"\");\n  };\n\n  const changeQuan = e => setList({ ...list,\n    quan: e.target.value\n  });\n\n  const changeName = e => {\n    let newProd = prod.data.filter(item => item.name == e.target.value);\n    console.log(newProd);\n    setList({ ...list,\n      name: e.target.value,\n      price: newProd[0].price\n    });\n  };\n\n  const clearInp = () => {\n    setActive(null);\n  };\n\n  console.log(prod.data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bill\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"bill-form\",\n      onSubmit: salesAdd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bill-det\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"bill-title\",\n          children: \"Invoice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"bill-inp\",\n          onChange: changeHandler,\n          placeholder: \"Customer Name\",\n          name: \"name\",\n          value: sudo.name,\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"bill-inp\",\n          onChange: changeHandler,\n          placeholder: \"Customer Age\",\n          name: \"age\",\n          value: sudo.age,\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bill-prod\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bill-prod-span\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              className: \"bill-inp bill-prod-inp bill-prod-name\",\n              onChange: e => changeName(e),\n              id: \"\",\n              children: prod.status ? prod.data.map(item => {\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: item.name,\n                    price: 20,\n                    children: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false);\n              }) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"bill-inp bill-prod-inp\",\n              value: list.quan,\n              placeholder: \"Quantity\",\n              name: \"\",\n              onChange: e => changeQuan(e),\n              id: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"log-button bill-button\",\n            onClick: addList,\n            children: \"ADD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bill-total\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bill-p\",\n          children: [\"Invoice #\", id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: shortStartDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Products :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), list.data.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"bill-total-prod\",\n            children: [item.quan, \"x \", item.name, \" = \", item.price * item.quan]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"bill-cont-main\",\n          children: [\"TOTAL:\", list.total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"log-button bill-button-main\",\n          type: \"submit\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Invoice, \"tv/mm7Jf+MutrU86EG/KQBDanR4=\");\n\n_c = Invoice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Invoice\");","map":{"version":3,"sources":["C:/Users/karth/Desktop/pharm/Pharmacy/src/pages/invoice.js"],"names":["React","useState","useEffect","util","axios","Invoice","prod","setProd","status","data","id","setId","get","then","res","arr","Object","values","length","sudo","setSudo","name","age","shortStartDate","date","setData","amount","products","changeHandler","e","keyName","target","value","salesAdd","preventDefault","list","total","console","log","post","alert","setList","filter","setFilter","active","setActive","quan","price","addList","preList","push","map","item","changeQuan","changeName","newProd","clearInp"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport util from '../util/main'\r\nimport axios from 'axios'   \r\n\r\nexport default function Invoice() {\r\n    const [prod, setProd] = useState({status:false,data:null})\r\n    const [id, setId] = useState(null)\r\n    useEffect(() => {       \r\n        \r\n        axios.get('http://localhost:8080/api/sales')\r\n        .then(res =>{\r\n            let arr = Object.values(res.data)\r\n            setId(arr[arr.length-1].id + 1)\r\n        })\r\n\r\n        axios.get('http://localhost:8080/api/products')\r\n        .then(res=>setProd({status:true,data:Object.values(res.data)}))\r\n        },[])\r\n    const[sudo,setSudo] =useState({name:\"\",age:\"\"}) //clears value\r\n    \r\n\r\n    let shortStartDate = util.date\r\n    const [data, setData] = useState({name:'', amount:'' , date: shortStartDate, products:null})\r\n\r\n    const changeHandler = e =>{\r\n        const keyName = e.target.name\r\n        const value = e.target.value\r\n        setData({name:data.name, amount:data.amount , date:data.date, products:data.products, [keyName]: value})\r\n        setSudo({name:sudo.name,age:sudo.age,[keyName]: value})\r\n    }\r\n    const salesAdd = e =>{\r\n        e.preventDefault()\r\n        if(data.name !== '' && list.total !== 0){ \r\n            console.log(data)\r\n            axios.post('https://localhost:4040/api/sales',{\"name\":data.name,\"amount\":list.total,\"date\":data.date,\"products\":data.products})\r\n            .then(res=>{ if(res.status === 200){ alert('Data Added')\r\n            console.log(res)\r\n            setList({...list, data:[], total:0})\r\n            setSudo({name:\"\",age:\"\"})\r\n            setId(id+1)\r\n        }})\r\n        }\r\n        else alert('please fill the required fields!')\r\n    }\r\n\r\n    const [filter, setFilter] = useState([])\r\n    const [active, setActive] = useState(null)\r\n    const [list, setList] = useState({data:[],quan:null,price:null,name:null,total:0 })\r\n\r\n    const addList = () =>{\r\n        const preList = list.data\r\n        preList.push({name:list.name, quan:list.quan, price:list.price})\r\n        let total = 0\r\n        list.data.map(item => total = total+(item.quan*item.price))\r\n        setList({data:preList,price:null, quan:\"\",total:total, name:null, price: 0})\r\n        setActive(\"\")\r\n    }\r\n\r\n    const changeQuan = e => setList({...list , quan:e.target.value})\r\n    const changeName = e =>{\r\n        let newProd = prod.data.filter(item=>item.name == e.target.value)\r\n        console.log(newProd)\r\n        setList({...list, name:e.target.value, price: newProd[0].price})\r\n    }\r\n\r\n    const clearInp = () =>{setActive(null)}\r\n    console.log(prod.data)\r\n\r\n    return (\r\n        <div className='bill'>\r\n            <form className='bill-form' onSubmit={salesAdd}>\r\n            <div className='bill-det'>       \r\n            <h1 className='bill-title'>Invoice</h1>\r\n                \r\n            <input type=\"text\" className='bill-inp' onChange={changeHandler} placeholder='Customer Name' name=\"name\" value={sudo.name} id=\"\"/>\r\n            <input type=\"text\" className='bill-inp'  onChange={changeHandler} placeholder='Customer Age' name=\"age\" value={sudo.age} id=\"\"/>\r\n            <div className='bill-prod'>\r\n                <div className='bill-prod-span'>\r\n                <select name=\"\" className='bill-inp bill-prod-inp bill-prod-name' onChange={e => changeName(e)} id=\"\">\r\n                    {prod.status?prod.data.map(item=>{return(\r\n                        <>\r\n                        <option value={item.name} price={20}>{item.name}</option>\r\n                        </>)\r\n                    }):null}\r\n                </select>\r\n                \r\n                <input type=\"number\" className='bill-inp bill-prod-inp' value={list.quan} placeholder='Quantity' name=\"\" onChange={e => changeQuan(e)} id=\"\"/>\r\n                </div>\r\n                <p className='log-button bill-button' onClick={addList}>ADD</p>\r\n            </div>\r\n                \r\n            </div>\r\n            <div className='bill-total'>\r\n            <p className='bill-p'>Invoice #{id}</p>\r\n            <p>{shortStartDate}</p>\r\n            <p>Products :</p>\r\n            {list.data.map(item=>{\r\n                return(\r\n                    <p className='bill-total-prod'>{item.quan}x {item.name} = {item.price*item.quan}</p>\r\n                )\r\n            })}\r\n            <p className='bill-cont-main'>TOTAL:{list.total}</p>\r\n            \r\n\r\n            <button className='log-button bill-button-main' type=\"submit\">Confirm</button>\r\n            </div>\r\n                </form>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}