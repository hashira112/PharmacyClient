{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\karth\\\\Desktop\\\\pharm\\\\Pharmacy\\\\src\\\\pages\\\\sales.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport '../style/Calendar.css';\nimport axios from 'axios';\nimport money from \"../assets/icons/money.svg\";\nimport util from '../util/main';\nexport default function Sales() {\n  _s();\n\n  const [sales, setSales] = useState({\n    status: false,\n    data: null\n  });\n  const [display, setDisplay] = useState({\n    data: sales.data,\n    total: 0\n  });\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/sales').then(res => setSales({\n      status: true,\n      data: Object.values(res.data)\n    }));\n  }, []);\n  let count = 1;\n  const [date, setDate] = useState(new Date());\n\n  const onChange = date => {\n    setDate(date);\n  };\n\n  let filter = [];\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n  let dateStr = date.toString();\n\n  if (sales.status) {\n    filter = sales.data.filter(item => item.date === date);\n    console.log(filter);\n  }\n\n  let total = 0;\n  filter.map(item => {\n    total = total + parseInt(item.amount);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sales\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sales-chart\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sales-chart-item sales-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sales-chart-inc\",\n          children: \"BILL NO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 61\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sales-chart-item-name\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 103\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sales-chart-count-no\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 148\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sales-chart-count\",\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 192\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), sales.status ? filter.length !== 0 ? filter.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sales-chart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sales-chart-inc\",\n            children: [\"#\", item.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sales-chart-item-name\",\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 100\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sales-chart-count-no\",\n            children: item.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 152\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"sales-chart-count\",\n            children: [\"$ \", item.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 203\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sales-err\",\n        children: \"No Data Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cover-spin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sales-cal\",\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        datesSelection: 'single',\n        onChange: onChange,\n        value: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 40\n      }, this), console.log(date)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sales-tab\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sales-tab-p\",\n          children: \"Total Sales\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"sales-tab-head\",\n          children: sales.status ? total : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sales-tab-icon-back\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: money,\n          className: \"sales-tab-icon\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sales, \"2QiRhbcjaGHkIHBoPMnL9mS3VIk=\");\n\n_c = Sales;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sales\");","map":{"version":3,"sources":["C:/Users/karth/Desktop/pharm/Pharmacy/src/pages/sales.js"],"names":["React","useState","useEffect","Calendar","axios","util","Sales","sales","setSales","status","data","display","setDisplay","total","get","then","res","Object","values","count","date","setDate","Date","onChange","filter","months","dateStr","toString","item","console","log","map","parseInt","amount","length","id","name","money"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport '../style/Calendar.css';\r\nimport axios from 'axios'\r\nimport money from '../assets/icons/money.svg'\r\nimport util from '../util/main'\r\n\r\nexport default function Sales() {\r\n    const [sales, setSales] = useState({status:false,data:null})\r\n    const [display, setDisplay] = useState({\r\n        data: sales.data, \r\n        total: 0})\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8080/api/sales')\r\n        .then(res=>setSales({status:true,data:Object.values(res.data)}))            \r\n    }, [])\r\n\r\n    let count = 1\r\n    const [date, setDate] = useState(new Date());\r\n    const onChange = date => {setDate(date);}\r\n  \r\n\r\n    let filter =[]\r\n    const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n    let dateStr = date.toString()\r\n    \r\n    if(sales.status){\r\n        filter = sales.data.filter(item => item.date === date)\r\n    console.log(filter)}\r\n    let total = 0\r\n    filter.map(item=>{\r\n        total = total + parseInt(item.amount)\r\n    })\r\n\r\n    return (\r\n        <div className='sales'>\r\n            \r\n            <div className='sales-chart'>\r\n                <div className='sales-chart-item sales-top'><p className='sales-chart-inc'>BILL NO</p><p className='sales-chart-item-name'>Name</p><p className='sales-chart-count-no'>Date</p><p className='sales-chart-count'>Amount</p></div>\r\n                {sales.status?filter.length!==0?filter.map(item=>{return(\r\n                    <div className='sales-chart-item'><p className='sales-chart-inc'>#{item.id}</p><p className='sales-chart-item-name'>{item.name}</p><p className='sales-chart-count-no'>{item.date}</p><p className='sales-chart-count'>$ {item.amount}</p></div>\r\n                )}):<div className='sales-err'>No Data Available</div>\r\n                :<div id=\"cover-spin\"></div>}</div>\r\n            <div className='sales-cal'><Calendar datesSelection={'single'} onChange={onChange}value={date} />{console.log(date)}\r\n            </div>\r\n            <div className='sales-tab'>\r\n                <div><p className='sales-tab-p'>Total Sales</p>\r\n                <h1 className='sales-tab-head'>{sales.status?total :null}</h1></div>\r\n                \r\n                <div className='sales-tab-icon-back'>\r\n                    <img src={money} className='sales-tab-icon' alt=\"\"/>\r\n                </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}